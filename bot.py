from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–ó–î–ï–°–¨"
AUDIO_PATH = "orc_alarm.mp3"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üî• –†–∞–∑–±—É–¥–∏ –º–µ–Ω—è!", callback_data='wake_up')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–•–†–†–†–†! –û—Ä–∫ –Ω–∞ —Å—Ç—Ä–∞–∂–µ —Ç–≤–æ–µ–≥–æ —Å–Ω–∞. –ñ–º–∏ –∫–Ω–æ–ø–∫—É ‚Äî –∏ –∑–≤—É–∫ —Å–æ—Ç—Ä—è—Å—ë—Ç —Ç–≤–æ–∏ —É—à–∏! ü™ì", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == 'wake_up':
        await query.message.reply_audio(audio=open(AUDIO_PATH, 'rb'), caption="üîî –û—Ä–æ—á–∏–π –±—É–¥–∏–ª—å–Ω–∏–∫ —Ç–µ–±—è –∑–æ–≤—ë—Ç!")

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –°–õ–ê–í–ê –í–û–ñ–î–Æ!")
    app.run_polling()